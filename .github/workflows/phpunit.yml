name: PHP Composer

on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        php-versions: [ '8.1' ]
        phpunit-version: [ '9.5' ]
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit:${{ matrix.phpunit-version }}, composer:v2
          coverage: xdebug

      - name: Check PHP Version
        run: php -v

      - name: Check Composer Version
        run: composer -V

      - name: Validate Composer json/lock
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install Composer Dependencies
        run: composer install

      - name: Run Unit Test
        run: composer test

      - name: "Run test suite"
        run: "vendor/bin/phpunit --coverage-clover=coverage.xml"
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: tests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install Mocha and Chai
        run: npm install -g mocha chai chai-http

      - name: Install Node dependencies
        run: npm ci

      - name: Run Unit Test for JS
        run: npx mocha tests/fetchtest.js
